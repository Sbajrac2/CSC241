/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package streams;

import java.io.PrintStream;
import java.time.Month;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.OptionalDouble;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.stream.Stream;

public class Main {

  public static void main(String[] args) {
    // Use this method to build the report using Streams
    String inputFileName = "data.xml";
    // Try to open the file
    try {
      XmlReader myXmlReader = new XmlReader(inputFileName);
      // Get the device hashmap
      HashMap<String,Device> devices = myXmlReader.getDevices();

      System.out.println("---=== Device Information ===---");

      // Use Streams to print count the devices
      Stream<Device> deviceStream = devices.values().stream();
      long count = deviceStream
              .map(p -> p.getRoom().getDevices())
              .count();
      System.out.println("Number of devices: " + count);

      // Use Streams to print the average temperature for device bcde-1234
      Device d = devices.get("bcde-1234");
      Reading[] readings = d.getReadings();
      Stream<Reading> readingStream = Arrays.stream(readings);

      // Calculating the average
      Double avg = readingStream
              .mapToDouble(r -> r.getValue())
              .average()
              .getAsDouble(); // Return the value
      System.out.println( "Average value: " + String.format("%.1f", avg));


      System.out.println("---=== Distinct Customers ===---");
      // Use Streams to print a sorted list of distinct customer full names
      ArrayList<Customer> customers = myXmlReader.getCustomers();
      Stream<Customer> customerStream = customers.stream();
      customerStream
              .map(p -> p.getFullName())
              .distinct()
              .forEach(p -> System.out.println(p));

    } catch (Exception e) {
      System.out.println("Exception: " + e);
    }
  }
}
